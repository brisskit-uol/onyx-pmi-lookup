<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.brisskit.app.onyx</groupId>
	<artifactId>brisskit-pmi-lookup</artifactId>
	<version>${environment.type}-1.0-RC1</version>
	<packaging>war</packaging>
	<name>PMI Lookup</name>
	<description>PMI Lookup Web Service using REST </description>
	
	<!--+
	    | The distributionManagement element is required for deploying an artifact to a remote repository.
	    | The repo will align with the version number; ie: a SNAPSHOT version will deploy to our snapshots
	    | repo whereas one without a SNAPSHOT within the version number will deploy to the releases repo.
	    +-->
	<distributionManagement>
		<repository>
			<id>nexus</id>
			<name>Brisskit Maven Snapshots</name>
			<url>scpexe://maven.brisskit.le.ac.uk/var/local/brisskit/sonatype-work/nexus/storage/releases</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<name>Brisskit Maven Releases</name>
			<url>scpexe://maven.brisskit.le.ac.uk/var/local/brisskit/sonatype-work/nexus/storage/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<properties>
		<!-- Default environment for development. Note: there is a production profile to overwrite these settings -->
		<environment.type>development</environment.type>
		<database.groupId>mysql</database.groupId>
		<database.artifactId>mysql-connector-java</database.artifactId>
		<database.version>5.1.12</database.version>
		
		<spring.version>3.0.0.RELEASE</spring.version>
		<java.version>1.6</java.version>
		<hsqldb.version>1.8.0.10</hsqldb.version>
		<dbunit.version>2.2.2</dbunit.version>
		<junit.version>4.4</junit.version>
		<easymock.version>2.4</easymock.version>
		<commons-dbcp.version>1.2.2</commons-dbcp.version>
		<xstream.version>1.3</xstream.version>
		<opencsv.version>1.8</opencsv.version>
		<hibernate-search.version>3.0.1.GA</hibernate-search.version>
		<hibernate-annotations.version>3.3.1.GA</hibernate-annotations.version>
		<hibernate.version>3.2.6.ga</hibernate.version>
		<hibernate-commons-annotations.version>3.3.0.ga</hibernate-commons-annotations.version>

		<!--  Deploy in Tomcat 6 -->
		<servlet-api.version>2.5</servlet-api.version>
		<jscience.version>4.3.1</jscience.version>
		<meparser.version>0.0.6</meparser.version>
		<jsr250-api.version>1.0</jsr250-api.version>
		<commons-httpclient.version>3.1</commons-httpclient.version>
		<jetty.version>6.1.4</jetty.version>

	</properties>
	<build>
		<extensions>
			<!-- Enabling the use of FTP -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh-external</artifactId>
				<version>1.0-beta-6</version>
			</extension>
		</extensions>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/environment-config/${environment.type}/</directory>
			</resource>
			<resource>
        		<directory>${basedir}</directory>
        		<!-- Finding the targetPath was NOT straightforward -->
        		<targetPath>../${artifactId}-${version}</targetPath>
        		<includes>
          			<include>licence.doc</include>
        		</includes>
      		</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
	</build>

	<dependencies>
		<!-- Spring Dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!--
			dependency> <groupId>com.springsource.javax.servlet</groupId>
			<artifactId>javax.servlet</artifactId>
			<version>${servlet-api.version}</version> <scope>test</scope>
			</dependency
		-->

		<!--

			./javax/servlet/com.springsource.javax.servlet/2.4.0/com.springsource.javax.servlet-2.4.0.jar
		-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>com.springsource.javax.servlet</artifactId>
			<version>2.4.0</version>
			<!-- scope>test</scope -->
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web.servlet</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.orm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<artifactId>org.springframework.transaction</artifactId>
			<groupId>org.springframework</groupId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<artifactId>org.springframework.jdbc</artifactId>
			<groupId>org.springframework</groupId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<artifactId>org.springframework.test</artifactId>
			<groupId>org.springframework</groupId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>org.springframework.web</artifactId>
			<groupId>org.springframework</groupId>
			<version>${spring.version}</version>
		</dependency>

		<!--
			Only a few things are needed from here (to satisfy the requirement of
			serializing to a Participant) but... the complexity of transitive
			dependencies is difficult to overcome. Excluding specific resources
			is not worth the complexity
		-->
		<dependency>
			<groupId>org.obiba.onyx</groupId>
			<artifactId>onyx-core</artifactId>
			<version>1.7.0</version>
		</dependency>

		<!-- Logging framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.5.8</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.5.8</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.5.8</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>${commons-dbcp.version}</version>
		</dependency>

		<!--
			dependency> <groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId> <version>1.1.1</version>
			</dependency
		-->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.6</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>${database.groupId}</groupId>
			<artifactId>${database.artifactId}</artifactId>
			<version>${database.version}</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.6.8</version>
		</dependency>

	</dependencies>

	<!-- Add the Spring Maven Repositories and Ibiblio to this project -->
	<repositories>
	

	    	<repository>
				<id>nexus</id>
				<name>Brisskit Maven Repo</name>
				<url>http://maven.brisskit.le.ac.uk/nexus/content/groups/public</url>
				<releases>
					<enabled>true</enabled>
				</releases>
				<snapshots>
					<enabled>true</enabled>
				</snapshots>
			</repository>

	</repositories>

	<profiles>
		<profile>
			<id>development</id>
			<activation>
				<property>
					<name>environment.type</name>
					<value>development</value>
				</property>
			</activation>
		</profile>
		<profile>
			<id>production</id>
			<activation>
				<property>
					<name>environment.type</name>
					<value>production</value>
				</property>
			</activation>
			<properties>
				<database.groupId>ms.jdbc</database.groupId>
				<database.artifactId>sqljdbc</database.artifactId>
				<database.version>2005</database.version>
				<!--  		
				<database.groupId>microsoft.sqlserver</database.groupId>
				<database.artifactId>sqljdbc4</database.artifactId>
				<database.version>3.0</database.version>
				-->
			</properties>
		</profile>
	</profiles>
	

</project>